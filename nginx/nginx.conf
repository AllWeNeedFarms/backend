events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # 🛡️ 보안 설정
    server_tokens off;
    client_max_body_size 10M;
    
    # 📝 로깅 설정 (디버깅용)
    log_format detailed '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       'rt=$request_time uct="$upstream_connect_time" '
                       'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log detailed;
    error_log /var/log/nginx/error.log warn;

    # 🔧 [핵심 수정] ECS Fargate용 upstream 설정
    upstream api {
        # ECS awsvpc 모드에서는 127.0.0.1 사용 (localhost 대신)
        server 127.0.0.1:5000;
        
        # 연결 유지 설정 (성능 최적화)
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }

    server {
        listen 80;
        
        # 📊 Nginx 헬스 체크 엔드포인트
        location /nginx-health {
            access_log off;
            return 200 "nginx healthy\n";
            add_header Content-Type text/plain;
        }
        
        # 🔍 백엔드 연결 테스트 엔드포인트 (디버깅용)
        location /nginx-test {
            access_log off;
            proxy_pass http://api/api/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 에러 시 상세 정보 표시
            proxy_intercept_errors on;
            error_page 502 503 504 = @backend_error;
        }
        
        # 🚀 API 요청 프록시 (메인 설정)
        location /api/ {
            # 상세 로깅 (임시 디버깅용)
            error_log /var/log/nginx/api_error.log debug;
            
            proxy_pass http://api;
            proxy_http_version 1.1;
            
            # 🔗 연결 헤더 설정
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # ⏱️ 타임아웃 설정
            proxy_connect_timeout 10s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            
            # 📦 버퍼링 설정
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            
            # 🔄 재시도 설정
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
            proxy_next_upstream_tries 2;
            proxy_next_upstream_timeout 10s;
            
            # 에러 처리
            proxy_intercept_errors on;
            error_page 502 503 504 = @backend_error;
        }
        
        # 🚨 백엔드 에러 페이지
        location @backend_error {
            internal;
            default_type application/json;
            return 502 '{"error": "Backend service unavailable", "timestamp": "$time_iso8601", "request_id": "$request_id"}';
        }
        
        # 📄 기본 헬스 체크 (호환성)
        location /health {
            access_log off;
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }
        
        # 🚫 기타 요청 처리
        location / {
            return 404 '{"error": "Not found - API requests should go to /api/*", "timestamp": "$time_iso8601"}';
            add_header Content-Type application/json;
        }
    }
    
    # 🔍 [핵심 수정] ECS Fargate용 resolver 제거
    # resolver 127.0.0.11은 Docker Compose 전용이므로 제거
    # ECS에서는 AWS VPC DNS가 자동으로 처리함
    
    # 🚀 성능 최적화
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    
    # MIME 타입
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
}